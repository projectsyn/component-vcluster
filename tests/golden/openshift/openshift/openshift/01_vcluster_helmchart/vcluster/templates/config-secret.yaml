apiVersion: v1
data:
  config.yaml: 
kind: Secret
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.29.1
    heritage: Helm
    release: openshift
  name: vc-config-openshift
  namespace: syn-openshift
type: Opaque
