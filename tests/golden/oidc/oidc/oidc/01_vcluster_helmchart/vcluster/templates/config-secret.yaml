apiVersion: v1
data:
  config.yaml: 
kind: Secret
metadata:
  labels:
    app: vcluster
    chart: vcluster-0.29.1
    heritage: Helm
    release: oidc
  name: vc-config-oidc
  namespace: testns
type: Opaque
