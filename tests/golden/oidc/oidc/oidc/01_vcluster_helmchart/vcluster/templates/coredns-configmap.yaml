apiVersion: v1
data:
  coredns.yaml: "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n\
    \  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind:\
    \ ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n\
    \  name: system:coredns\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n\
    \      - endpoints\n      - services\n      - pods\n      - namespaces\n    verbs:\n\
    \      - list\n      - watch\n  - apiGroups:\n      - discovery.k8s.io\n    resources:\n\
    \      - endpointslices\n    verbs:\n      - list\n      - watch\n---\napiVersion:\
    \ rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n\
    \    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping:\
    \ rbac-defaults\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n\
    \  kind: ClusterRole\n  name: system:coredns\nsubjects:\n  - kind: ServiceAccount\n\
    \    name: coredns\n    namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\n\
    metadata:\n  name: coredns\n  namespace: kube-system\ndata:\n  Corefile: |-\n\
    \    .:1053 {\n        errors\n        health\n        ready\n        rewrite\
    \ name regex .*\\.nodes\\.vcluster\\.com kubernetes.default.svc.cluster.local\n\
    \        kubernetes cluster.local in-addr.arpa ip6.arpa {\n            pods insecure\n\
    \            fallthrough in-addr.arpa ip6.arpa\n        }\n        hosts /etc/NodeHosts\
    \ {\n            ttl 60\n            reload 15s\n            fallthrough\n   \
    \     }\n        prometheus :9153\n        forward . /etc/resolv.conf\n      \
    \  cache 30\n        loop\n        loadbalance\n    }\n  \n    import /etc/coredns/custom/*.server\n\
    \  NodeHosts: \"\"\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name:\
    \ coredns\n  namespace: kube-system\n  labels:\n    k8s-app: vcluster-kube-dns\n\
    \    kubernetes.io/name: \"CoreDNS\"\nspec:\n  replicas: 1\n  strategy:\n    type:\
    \ RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n  \
    \  matchLabels:\n      k8s-app: vcluster-kube-dns\n  template:\n    metadata:\n\
    \      labels:\n        k8s-app: vcluster-kube-dns\n    spec:\n      priorityClassName:\
    \ \"\"\n      serviceAccountName: coredns\n      nodeSelector:\n        kubernetes.io/os:\
    \ linux\n      topologySpreadConstraints:\n        - labelSelector:\n        \
    \    matchLabels:\n              k8s-app: vcluster-kube-dns\n          maxSkew:\
    \ 1\n          topologyKey: kubernetes.io/hostname\n          whenUnsatisfiable:\
    \ DoNotSchedule\n      containers:\n        - name: coredns\n          image:\
    \ {{.IMAGE}}\n          imagePullPolicy: IfNotPresent\n          resources:\n\
    \            limits:\n              cpu: 1000m\n              memory: 170Mi\n\
    \            requests:\n              cpu: 20m\n              memory: 64Mi\n \
    \         args: [ \"-conf\", \"/etc/coredns/Corefile\" ]\n          volumeMounts:\n\
    \            - name: config-volume\n              mountPath: /etc/coredns\n  \
    \            readOnly: true\n            - name: custom-config-volume\n      \
    \        mountPath: /etc/coredns/custom\n              readOnly: true\n      \
    \    securityContext:\n            runAsNonRoot: true\n            runAsUser:\
    \ {{.RUN_AS_USER}}\n            runAsGroup: {{.RUN_AS_GROUP}}\n            allowPrivilegeEscalation:\
    \ false\n            capabilities:\n              add:\n                - NET_BIND_SERVICE\n\
    \              drop:\n                - ALL\n            readOnlyRootFilesystem:\
    \ true\n          livenessProbe:\n            httpGet:\n              path: /health\n\
    \              port: 8080\n              scheme: HTTP\n            initialDelaySeconds:\
    \ 60\n            periodSeconds: 10\n            timeoutSeconds: 1\n         \
    \   successThreshold: 1\n            failureThreshold: 3\n          readinessProbe:\n\
    \            httpGet:\n              path: /ready\n              port: 8181\n\
    \              scheme: HTTP\n            initialDelaySeconds: 0\n            periodSeconds:\
    \ 2\n            timeoutSeconds: 1\n            successThreshold: 1\n        \
    \    failureThreshold: 3\n      dnsPolicy: Default\n      volumes:\n        -\
    \ name: config-volume\n          configMap:\n            name: coredns\n     \
    \       items:\n              - key: Corefile\n                path: Corefile\n\
    \              - key: NodeHosts\n                path: NodeHosts\n        - name:\
    \ custom-config-volume\n          configMap:\n            name: coredns-custom\n\
    \            optional: true\n---\napiVersion: v1\nkind: Service\nmetadata:\n \
    \ name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io/port:\
    \ \"9153\"\n    prometheus.io/scrape: \"true\"\n  labels:\n    k8s-app: vcluster-kube-dns\n\
    \    kubernetes.io/cluster-service: \"true\"\n    kubernetes.io/name: \"CoreDNS\"\
    \nspec:\n  type: ClusterIP\n  selector:\n    k8s-app: vcluster-kube-dns\n  ports:\n\
    \    - name: dns\n      port: 53\n      targetPort: 1053\n      protocol: UDP\n\
    \    - name: dns-tcp\n      port: 53\n      targetPort: 1053\n      protocol:\
    \ TCP\n    - name: metrics\n      port: 9153\n      protocol: TCP"
kind: ConfigMap
metadata:
  name: vc-coredns-oidc
  namespace: testns
